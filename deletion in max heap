#include <iostream>
using namespace std;
void swap(int& a, int& b) {
    int temp = a;
    a = b;
    b = temp;
}
void maxheapifydown(int* heap,int size,int index){
    int leftchild=2*index+1;
    int rightchild=2*index+2;
    int largest=index;
    
    if(leftchild<size && heap[leftchild]>heap[largest]){
        largest=leftchild;
    }
    if(rightchild<size && heap[rightchild]>heap[largest]){
        largest=rightchild;
    }
    if(largest!=index){
        swap(heap[index],heap[largest]);
        maxheapifydown(heap,size,largest);
    }
}
int deletemax(int* &heap,int size){
    if(size==0){
        cout<<"heap is empty"<<endl;
        return -1;
    } 
    int maxelement=heap[0];
    heap[0]=heap[size-1];
    --size;
    
    maxheapifydown(heap,size,0);
    return maxelement;
}
int main(){
    int* maxheap=new int[5]{90,80,70,60,50};
    int heapsize=5;
    int maxelement=deletemax(maxheap,heapsize);
    cout<<"max heap after deletion: ";
    for(int i=0;i<heapsize;++i){
        cout<<maxheap[i]<<" ";
    }
    cout<<endl;
    cout<<"deleted max element: "<<maxelement<<endl;
    delete[] maxheap;
    return 0;
}
