#include<iostream>
using namespace std;
void swap(int& a,int& b){
    int temp=a;
    a=b;
    b=temp;
}
void maxheapifydown(int * heap,int size,int index){
    int leftchild=2*index+1;
    int rightchild=2*index+2;
    int largest=index;
    
    if(leftchild<size && heap[leftchild]>heap[largest]){
        largest=leftchild;
    }
    if(rightchild<size && heap[rightchild]>heap[largest]){
        largest=rightchild;
    }
    if(largest!=index){
        swap(heap[index],heap[largest]);
        maxheapifydown(heap,size,largest);
    }
}
void buildmaxheap(int* arr,int size){
    for(int i=size/2-1;i>=0;--i){
        maxheapifydown(arr,size,i);
    }
}
void heapsort(int * arr,int size){
    buildmaxheap(arr,size);
    
    for(int i=size-1;i>0;--i){
        swap(arr[0],arr[i]);
        maxheapifydown(arr,i,0);
    }
}
int main(){
    int arr[]={12,11,4,17,5,6,8};
    int size=sizeof(arr)/sizeof(arr[0]);
    cout<<"original array: ";
    for(int i=0;i<size;++i){
        cout<<arr[i]<<" ";
    }
    cout<<endl;
    heapsort(arr,size);
    
    cout<<"sorted array: ";
    for(int i=0;i<size;++i){
        cout<<arr[i]<<" ";
    }
    return 0;
}
